{"version":3,"file":"t4d-wnow-employee-lib.js","sources":["../esm2015/projects/employee-lib/src/lib/components/employee-table/employee-table.component.ts","../../projects/employee-lib/src/lib/employee-lib.module.ts","../projects/employee-lib/src/lib/services/employees.service.ts","../projects/employee-lib/src/lib/services/employees-resolver.service.ts","../../../projects/employee-lib/src/public-api.ts","../../../projects/employee-lib/src/t4d-wnow-employee-lib.ts"],"sourcesContent":["import { Component, OnInit, Input } from '@angular/core';\nimport { Employee } from '../../models/Employee';\n\n@Component({\n  selector: 'lib-employee-table',\n  templateUrl: './employee-table.component.html',\n  styleUrls: ['./employee-table.component.css']\n})\nexport class EmployeeTableComponent implements OnInit {\n\n  public displayedColumns: string[] = [\n    'username', 'firstName', 'lastName', 'title'];\n\n  @Input()\n  public employees: Employee[] = [];\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { MatTableModule } from '@angular/material/table';\n\nimport { EmployeeTableComponent } from './components/employee-table/employee-table.component';\n\n\n\n@NgModule({\n  declarations: [EmployeeTableComponent],\n  imports: [\n    CommonModule,\n    HttpClientModule,\n    MatTableModule,\n  ],\n  exports: [EmployeeTableComponent]\n})\nexport class EmployeeLibModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\nimport { Employee } from '../models/Employee';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EmployeesService {\n\n  constructor(private httpClient: HttpClient) { }\n\n  all(): Observable<Employee[]> {\n    return this.httpClient.get<Employee[]>('/api/employees').pipe(\n      catchError(() => {\n        throw Error('Unable to download employees');\n      })\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs';\n\nimport { Employee } from '../models/Employee';\nimport { EmployeesService } from './employees.service';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EmployeesResolverService implements Resolve<Employee[]> {\n\n  constructor(private employeesSvc: EmployeesService) { }\n\n  resolve(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot):\n    Employee[] | Observable<Employee[]> | Promise<Employee[]> {\n    return this.employeesSvc.all();\n  }\n}\n","/*\n * Public API Surface of employee-lib\n */\n\nexport * from './lib/employee-lib.module';\nexport * from './lib/components/employee-table/employee-table.component';\nexport * from './lib/models/Employee';\nexport * from './lib/services/employees-resolver.service';\nexport * from './lib/services/employees.service';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":";;;;;;MAQa,sBAAsB;IAQjC;QANO,qBAAgB,GAAa;YAClC,UAAU,EAAE,WAAW,EAAE,UAAU,EAAE,OAAO;SAAC,CAAC;QAGzC,cAAS,GAAe,EAAE,CAAC;KAEjB;IAEjB,QAAQ;KACP;;;YAhBF,SAAS,SAAC;gBACT,QAAQ,EAAE,oBAAoB;gBAC9B,s+BAA8C;;aAE/C;;;;wBAME,KAAK;;;MCKK,iBAAiB;;;YAT7B,QAAQ,SAAC;gBACR,YAAY,EAAE,CAAC,sBAAsB,CAAC;gBACtC,OAAO,EAAE;oBACP,YAAY;oBACZ,gBAAgB;oBAChB,cAAc;iBACf;gBACD,OAAO,EAAE,CAAC,sBAAsB,CAAC;aAClC;;;MCPY,gBAAgB;IAE3B,YAAoB,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;KAAK;IAE/C,GAAG;QACD,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAa,gBAAgB,CAAC,CAAC,IAAI,CAC3D,UAAU,CAAC;YACT,MAAM,KAAK,CAAC,8BAA8B,CAAC,CAAC;SAC7C,CAAC,CACH,CAAC;KACH;;;;YAbF,UAAU,SAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;YARQ,UAAU;;;MCUN,wBAAwB;IAEnC,YAAoB,YAA8B;QAA9B,iBAAY,GAAZ,YAAY,CAAkB;KAAK;IAEvD,OAAO,CACL,KAA6B,EAC7B,KAA0B;QAE1B,OAAO,IAAI,CAAC,YAAY,CAAC,GAAG,EAAE,CAAC;KAChC;;;;YAZF,UAAU,SAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;YALQ,gBAAgB;;;ACLzB;;;;ACAA;;;;;;"}